class Solution {
    public int coinChange(int[] coins, int amount) {
        //完全背包问题，求组合数,先物品再背包
        //dp[j]：凑足总额为j所需钱币的最少个数为dp[j]
        int max = Integer.MAX_VALUE;
        int[] dp = new int[amount + 1];
        for(int i = 0; i < dp.length; i++) {
            dp[i] = max;
        }
        //金额为0，选择的硬币数也为0
        dp[0] = 0;
        for(int i = 0; i < coins.length; i++) {
            for(int j = coins[i]; j <= amount; j++){
                if(dp[j - coins[i]] != max) {
                    dp[j] = Math.min(dp[j], dp[j - coins[i]] + 1);
                }
            }
        }
        return dp[amount] == max ? -1 : dp[amount];
    }
}
