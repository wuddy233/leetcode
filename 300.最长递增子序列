class Solution {
    public int lengthOfLIS(int[] nums) {
        //dp[i]表示i之前包括i的以nums[i]结尾最长上升子序列的长度
        if(nums.length == 1) return 1;
        int[] dp = new int[nums.length];
        for(int i = 0; i < nums.length; i++) {
            dp[i] = 1;
            for(int j = 0; j < i; j++) {
                //状态转移,下面其实是为了循环找出最大的dp[i]
                if(nums[i] > nums[j]) dp[i] = Math.max(dp[i], dp[j] + 1);
            }
        } 
        int res = 0;
        for(int i = 0; i < dp.length; i++) {
            res = Math.max(res, dp[i]);
        }
        return res;
    }
}
