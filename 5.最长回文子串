class Solution {
    public String longestPalindrome(String s) {
        // dp[i][j] 表示[i,j]内的字符串是否为回文子串
        boolean[][] dp = new boolean[s.length()][s.length()];
        int begin = 0, end = 0;
        int maxLength = 0;
        for (int i = s.length() - 1; i >= 0; i--) {
            for (int j = i; j < s.length(); j++) {
                if (s.charAt(i) == s.charAt(j)) {
                    if (j - i <= 2) {
                        dp[i][j] = true;
                    } else if (dp[i + 1][j - 1]) {
                        dp[i][j] = true;
                    }
                }
                if (dp[i][j] && j - i + 1 > maxLength) {
                    maxLength = j - i + 1;
                    begin = i;
                    end = j;
                }
            }
        }
        return s.substring(begin, end + 1);
    }
}
